{"ast":null,"code":"var _jsxFileName = \"/Users/jpek/Documents/GitHub/Expense-Tracker/src/components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    console.log(expenseData);\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n\n    if (!shouldShowForm) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickHandler,\n          children: \"Add New Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this);\n    }\n\n    const stopEditingHandler = () => {\n      setIsEditing(false);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense\",\n      children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startEditingHandler,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n        onSaveExpenseData: saveExpenseDataHandler,\n        onCancel: stopEditingHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this);\n  };\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/Users/jpek/Documents/GitHub/Expense-Tracker/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditing","setIsEditing","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","console","log","onAddExpense","startEditingHandler","shouldShowForm","clickHandler","stopEditingHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMM,sBAAsB,GAAIC,kBAAD,IAAwB;AACrD,UAAMC,WAAW,GAAG,EAClB,GAAGD,kBADe;AAElBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFc,KAApB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAL,IAAAA,KAAK,CAACY,YAAN,CAAmBP,WAAnB;AACAH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GARD;;AAUE,QAAMW,mBAAmB,GAAG,MAAM;AAChCX,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAGJ,QAAI,CAACY,cAAL,EAAqB;AACnB,0BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,UAAMC,kBAAkB,GAAG,MAAM;AAC/Bd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD;;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACG,CAACD,SAAD,iBACC;AAAQ,QAAA,OAAO,EAAEY,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIGZ,SAAS,iBACR,QAAC,WAAD;AAAa,QAAA,iBAAiB,EAAEE,sBAAhC;AAAwD,QAAA,QAAQ,EAAEa;AAAlE;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GA1BG;AA0BF,CAtCF;;GAAMjB,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    console.log(expenseData);\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n    const startEditingHandler = () => {\n      setIsEditing(true);\n\n\n  if (!shouldShowForm) {\n    return (\n      <div className=\"new-expense\">\n        <button onClick={clickHandler}>Add New Expense</button>\n      </div>\n    );\n  }\n\n  const stopEditingHandler = () => {\n    setIsEditing(false)\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>\n      )}\n    </div>\n  );\n}};\n\nexport default NewExpense;\n"]},"metadata":{},"sourceType":"module"}